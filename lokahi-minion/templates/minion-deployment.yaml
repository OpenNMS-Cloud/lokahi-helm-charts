apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serviceName }}
  labels:
    app: {{ .Values.serviceName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        appdomain: opennms
        app: {{ .Values.serviceName }}
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: "{{ .Values.serviceName }}"
    spec:
      {{- with .Values.customHostAliases }}
      hostAliases:
{{ toYaml . | indent 7 }}
    {{- end }}
      serviceAccountName: {{ .Values.serviceName }}-sa
      {{- if .Values.nodeRestrictions.enabled }}
      nodeSelector:                                                                                    
        {{ .Values.nodeRestrictions.key }}: {{ .Values.nodeRestrictions.value }}                       
      tolerations:
        - effect: "NoSchedule"                                                                         
          key: "{{ .Values.nodeRestrictions.key }}"                                                    
          operator: "Equal"
          value: {{ .Values.nodeRestrictions.value }} 
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:                                             
          - weight: 1                                                                                  
            preference:                                                                                
              matchExpressions:                                                                        
              - key: "{{ .Values.nodeRestrictions.key }}"                                              
                operator: In
                values:                                                                                
                - {{ .Values.nodeRestrictions.value }}                                                 
      {{- end }}
      volumes:
        - name: minion-secrets
          secret:
            defaultMode: 420
            secretName: minion-app-secrets
        {{- if .Values.extraVolumes }}
          {{ toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      initContainers:
        {{- if eq (include "onOpenShift" .) "false" }}
        - name: init-sysctl
          image: busybox
          command:
            - sysctl
            - -w
            - net.ipv4.ping_group_range=0 429496729
          securityContext:
            privileged: true
        {{- end }}
        {{- if .Values.extraInitContainers }}
          {{ toYaml .Values.extraInitContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Values.serviceName }}
          image: {{ include "lokahi.image" (dict "Values" .Values) | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            {{- if .Values.id }}
            - name: MINION_ID
              value: "{{ .Values.id }}"
            {{- end }}
            - name: GRPC_CLIENT_KEYSTORE_PASSWORD
              value: "{{ .Values.grpcClientKeystorePassword }}"
            - name: MINION_GATEWAY_HOST
            {{- if .Values.gatewayHost }}
              value: "{{ .Values.gatewayHost }}" # we're inside the cluster, so we need to talk to the internal service name
            {{- else }}
              value: "minion.{{ .Values.global.hostname }}" 
            {{- end}}
            - name: GRPC_CLIENT_OVERRIDE_AUTHORITY
              value: "minion.{{ .Values.global.hostname }}" # but the TLS certificate will have the external name, so expect that
            {{- if .Values.customCertificateAuthority }}
            - name: GRPC_CLIENT_TRUSTSTORE
              value: "/opt/karaf/certs/CA.cert"
            {{- end}}
            - name: JAVA_TOOL_OPTIONS
              {{- if .Values.debugPort }}
              value: "-Djava.net.preferIPv4Stack=true -javaagent:agent/opentelemetry-javaagent.jar -agentlib:jdwp=transport=dt_socket,server=y,address=5005,suspend=n,quiet=y"
              {{- else }}
              value: "-Djava.net.preferIPv4Stack=true -javaagent:agent/opentelemetry-javaagent.jar"
              {{- end }}
            {{- if .Values.logLevel }}
            - name: KARAF_OPTS
              value: -Dkaraf.log.console={{ .Values.logLevel }}
            {{- end }}
            {{- if .Values.global.openTelemetry.otlpTracesEndpoint }}
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: {{ .Values.global.openTelemetry.otlpTracesEndpoint | toYaml }}
            {{- else }}
            - name: OTEL_TRACES_EXPORTER
              value: "none"
            {{- end }}
            - name: OTEL_METRICS_EXPORTER
              value: "none"
            {{- if .Values.global.openTelemetry.env }}
              {{- range $key, $val := .Values.global.openTelemetry.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
              {{- end }}
            {{- end }}
            # Do not put any env variables below this. The lokahi.development.env include should be last
            # in the 'env' section so variables can be overridden with Helm chart values when needed.
            {{- include "lokahi.deployment.env" (dict "Values" .Values ) | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.global.port }}
            - name: snmp-traps
              protocol: UDP
              containerPort: {{ .Values.trapsListenerPort }}
            - name: ssh
              containerPort: {{ .Values.sshPort }}
            - name: netflow5
              protocol: UDP
              containerPort: {{ .Values.netflow5ListenerPort }}
            - name: netflow9
              protocol: UDP
              containerPort: {{ .Values.netflow9ListenerPort }}
          volumeMounts:
            - name: minion-secrets
              subPath: "minion.p12"
              mountPath: "/opt/karaf/minion.p12"
            {{- if .Values.customCertificateAuthority }}
            - name: minion-secrets
              subPath: "CA.cert"
              mountPath: "/opt/karaf/certs/CA.cert"
            {{- end}}
            {{- if .Values.extraMounts }}
              {{ toYaml .Values.extraMounts | nindent 12 }}
            {{- end }}
          resources:
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
          startupProbe:
            exec:
              command:
              - sh
              - -c
              - unset JAVA_TOOL_OPTIONS; echo "opennms:task-set-print" | bin/client -b | grep -q taskDefinition
            initialDelaySeconds: 25
            periodSeconds: 5
            failureThreshold: 10
