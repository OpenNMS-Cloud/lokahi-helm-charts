{{ if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serviceName }}
  labels:
    app: {{ .Values.serviceName }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      labels:
        appdomain: opennms
        app: {{ .Values.serviceName }}
      annotations:
        # roll the deployment when the cortex configmap changes
        checksum/cortex-configmap: {{ include (print $.Template.BasePath "/cortex-configmap.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: "{{ .Values.serviceName }}"
    spec:
      {{- if .Values.nodeRestrictions.enabled }}
      nodeSelector:
        {{ .Values.nodeRestrictions.key }}: {{ .Values.nodeRestrictions.value }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.nodeRestrictions.key }}"
          operator: "Equal"
          value: {{ .Values.nodeRestrictions.value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: "{{ .Values.nodeRestrictions.key }}"
                    operator: In
                    values:
                      - {{ .Values.nodeRestrictions.value }}
      {{- end }}
      volumes:
        - name: cortex-config-volume
          configMap:
            name: cortex-config-map
        - name: cortex-rules-volume
          emptyDir: {}
      containers:
        - name: {{ .Values.serviceName }}
          image: {{ .Values.image }}
          args: ["-config.file=/etc/cortex.yml"]
          ports:
            - containerPort: 9000
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          volumeMounts:
            - name: cortex-config-volume
              mountPath: "/etc/cortex.yml"
              subPath: "cortex.yml"
            - name: cortex-rules-volume
              mountPath: /tmp/cortex/rules
{{ end }}

