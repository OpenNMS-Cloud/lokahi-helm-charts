global:
  hostname: onmshs
  port: 443  # set depending on tls.enabled and the ingress ports, do not change
  protocol: https  # set depending on tls.enabled, do not change
  image:
    repository: opennms
    tag: v0.0.61
  springBoot:  # Spring-boot-env-configmap
    env: {}  # Environment variables to be set for Spring Boot.
  kafkaClient:  # SPRING_KAFKA_BOOTSTRAP_SERVERS URL used in Alert, Datachoices, events, inventory, metricsprocessor, minion-gateway,and notification deployment services.
    bootstrapServers: onms-kafka:9092
  enableJsonLogging: false  # JSON logging flag for Spring Boot.
  openTelemetry:
    otlpTracesEndpoint: null  # Specifies the OTLP traces endpoint URL
    env:  # Environment variable for OpenTelemetry used in Spring-boot-env-configmap
      OTEL_PROPAGATORS: tracecontext,baggage,jaeger
  citusPort: ~       # Override citus default port 
  keycloakPort : ~   # Override keycloak default port 

OpenNMS:
  port:
    grpc: ~      # Override grpc default port 6565
    http: ~      # Override http default port 8080
# Specifies configuration for API module, including service details, image settings, resource
# limits, external flow server URL, certificate manager URL and GraphQL playground settings.
  api:
    path: /api
    serviceName: opennms-rest-server
    imageShortName: lokahi-rest-server
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    resources:
      limits:
        cpu: "1"
        memory: 2Gi  # MaxRAMPercentage=50,avg-usage=245MB
      requests:
        cpu: "1"
        memory: 2Gi
    privateRepoEnabled: false
    flowsUrl: SOME-EXTERNAL-FLOW-SERVER:80
    flowsTlsEnabled: false
    certificateManagerUrl: ""
    packagedminionFile: run-minion-docker-compose.yaml
    minionEndpoint: host.docker.internal
    introspectionEnabled: false
    maxAliasOccurrence: 5
    maxComplexity: 60
    maxDirectiveOccurrence: 5
    maxFieldOccurrence: 5
    maxQueryDepth: 5
    playgroundGuiEnabled: false
# Specifies configuration for metrics processor module, specifying service details, image settings,
# resource limits, external flow server URL, TLS configuration and Kafka secret.
  metricsProcessor:
    serviceName: opennms-metrics-processor
    imageShortName: lokahi-metrics-processor
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    resources:
      limits:
        cpu: "2"
        memory: 4Gi  # MaxRAMPercentage=50,avg-usage=400MB
      requests:
        cpu: "1"
        memory: 2Gi
    privateRepoEnabled: false
    flowIngestorUrl: SOME-EXTERNAL-FLOW-SERVER:80
    flowTlsEnabled: false
    kafkaSecretName: ~
# Specifies configuration for the metrics-threshold-processor module, including service details, image settings,
# resource requests and limits.
  metricsthresholdprocessor:
    serviceName: opennms-metrics-threshold-processor
    imageShortName: lokahi-metrics-threshold-processor
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    resources:
      limits:
        cpu: "2"
        memory: 4Gi # MaxRAMPercentage=50,avg-usage=400MB
      requests:
        cpu: "1"
        memory: 2Gi
    privateRepoEnabled: false
# Specifies configuration for the UI module, including path, TLS secret name, image details,
# resource limits, repository access and Ingress annotations for opennms.
  ui:
    path: /
    serviceName: opennms-ui
    tlsSecretName: opennms-ui-certificate
    imageShortName: lokahi-ui
    imagePullPolicy: IfNotPresent
    replicas: 1
    port: 8080
    resources:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
    privateRepoEnabled: false
    ingressAnnotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "sameorigin";
        add_header server_tokens "off";
      nginx.ingress.kubernetes.io/client-body-buffer-size: 4k
      nginx.ingress.kubernetes.io/client-header-buffer-size: 4k
      nginx.ingress.kubernetes.io/large-client-header-buffers: 4 16k
      nginx.ingress.kubernetes.io/proxy-body-size: 4m
      nginx.ingress.kubernetes.io/proxy-buffer-size: 6k
# Specifies configuration for the Minion Gateway module, including service details, TLS secret name,
# resource limits, ingress annotations and Kafka secret.
  minionGateway:
    serviceName: opennms-minion-gateway
    tlsSecretName: opennms-minion-gateway-certificate
    imageShortName: lokahi-minion-gateway
    imagePullPolicy: IfNotPresent
    internalGrpcPort: 8991
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: true
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    useKubernetes: "true"
    databaseName: "desenv"
    databaseSchemaName: "minion_gateway"
    databaseHost: "postgres"
    resources:
      limits:
        cpu: "2"
        memory: 4Gi  # MaxRAMPercentage=40 for heap (avg-usage=480MB) plus up to 2GB off-heap (4 Ignite Data Regions)
      requests:
        cpu: "1"
        memory: 2Gi
    ingressAnnotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "0"  # To avoid HTTP 413 and "client intended to send too large chunked body: X bytes while sending request to upstream"
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
      nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      nginx.ingress.kubernetes.io/auth-response-headers: "tenant-id, location-id"
      nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: true
      nginx.ingress.kubernetes.io/server-snippet: |
        grpc_read_timeout "1200s";
        grpc_send_timeout "1200s";
        client_body_timeout "1200s";
    privateRepoEnabled: false
    kafkaSecretName: ~
# Specifies configuration for the inventory module, including service details, database settings,
# resource limits, encryption key, repository access and Kafka secret.
  inventory:
    serviceName: opennms-inventory
    imageShortName: lokahi-inventory
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    databaseName: "desenv"
    databaseSchemaName: "inventory"
    databaseHost: "postgres"
    resources:
      limits:
        cpu: "2"
        memory: 4Gi  # MaxRAMPercentage=50,avg-usage=620MB
      requests:
        cpu: "1"
        memory: 2Gi
    encryptionKey: ~
    privateRepoEnabled: false
    kafkaSecretName: ~
# Specifies configuration for the alert module, including service details, database settings,
# resource limits, repository access, and Kafka secret.
  alert:
    serviceName: opennms-alert
    imageShortName: lokahi-alert
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    databaseName: "desenv"
    databaseSchemaName: "alert"
    databaseHost: "postgres"
    resources:
      limits:
        cpu: "2"
        memory: 4Gi  # MaxRAMPercentage=50,avg-usage=480MB
      requests:
        cpu: "1"
        memory: 2Gi
    privateRepoEnabled: false
    kafkaSecretName: ~
# Specifies configuration for the notification module, including service details, database settings,
# resource limits, Kafka retry parameters, ACS connection and base URL.
  notification:
    serviceName: opennms-notifications
    imageShortName: lokahi-notification
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    databaseName: "desenv"
    databaseSchemaName: "notification"
    databaseHost: "postgres"
    resources:
      limits:
        cpu: "2"
        memory: 4Gi  # MaxRAMPercentage=50,avg-usage=450MB
      requests:
        cpu: "1"
        memory: 2Gi
    mailFrom: ""          # sender's email address
    smtpHost: ""
    smtpPort: ""
    smtpStartTls: false   # enable encryption (TLS) for an email connection 
    smtpAuth: false       # SMTP authentication 
    smtpUsername: ""
    smtpPassword: ""
    privateRepoEnabled: false
    kafkaSecretName: ~
    retry:
      delay: 1000
      maxDelay: 60000
      multiplier: 2
      max: 10
    acsConnectionSecretName: {}  # the ACS connection string is expected in the 'connection-string' key
    baseUrl:
      port: 443
      appendTenantId: false
# Specifies configuration for the events module, including service name, image details, replica count,
# database configuration, resource limits and repository access.
  events:
    serviceName: opennms-events
    imageShortName: lokahi-events
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    databaseName: "desenv"
    databaseSchemaName: "events"
    databaseHost: "postgres"
    resources:
      limits:
        cpu: "2"
        memory: 4Gi  # MaxRAMPercentage=50,avg-usage=550MB
      requests:
        cpu: "1"
        memory: 2Gi
    privateRepoEnabled: false
# Specifies configuration for the datachoices module, including service name, image details,
# replica count, database configuration, resource limits and repository access.
  dataChoices:
    serviceName: opennms-datachoices
    imageShortName: lokahi-datachoices
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    databaseName: "desenv"
    databaseSchemaName: "datachoices"
    databaseHost: "postgres"
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: "1"
        memory: 1Gi
    privateRepoEnabled: false
# Specifies configuration for the minion certificate manager module, including service name,
# secret names, image details, replica count, resource limits and repository access.
  minionCertificateManager:
    enabled: true
    serviceName: opennms-minion-certificate-manager
    caSecretName: root-ca-certificate
    mtlsSecretName: client-root-ca-certificate
    imageShortName: lokahi-minion-certificate-manager
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    volumeSize: 1Gi
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: "1"
        memory: 1Gi
    privateRepoEnabled: false
# Specifies configuration for the minion certificate verifier module, including service name,
# image details, replica count, resource limits and repository access.
  minionCertificateVerifier:
    serviceName: opennms-minion-certificate-verifier
    imageShortName: lokahi-minion-certificate-verifier
    imagePullPolicy: IfNotPresent
    replicas: 1
    debug:
      enabled: false
      java:
        preferIPv4Stack: false
        javaAgentPath: agent/opentelemetry-javaagent.jar
      transport: dt_socket
      port: 5005
      server: true
      suspend: true 
      quiet: true
    resources:
      limits:
        cpu: "1"
        memory: 1Gi  # MaxRAMPercentage=50,avg-usage=245MB
      requests:
        cpu: "1"
        memory: 1Gi
    privateRepoEnabled: false
    certificateManagerUrl: ""
# Enables integration of Citus with notification module.
Citus:
  enabled: true
  adminUser: desenv
  adminPassword: notset
  port: 5432
# Specifies the path, ports, service name and realm name for Keycloak module.
Keycloak:
  enabled: true
  path: /auth
  port: 8080
  httpsPort: 8443
  serviceName: onms-keycloak
  imageShortName: lokahi-keycloak
  realmName: opennms
  adminUsername: admin
  adminPassword: notset
# Enables integration of Grafana with notification module, specifying path, port and service name.
Grafana:
  enabled: true
  path: /grafana
  port: 3000
  serviceName: grafana
  imageShortName: lokahi-grafana
  databaseHost: postgres
# Configures hosts, paths, protocol and ports for reading and writing data to Cortex
# in the notification module.
cortexClient:
  hostRead: cortex
  hostWrite: cortex
  pathRead: /prometheus/api/v1
  pathWrite: /api/v1/push
  protocol: http
  portRead: 9000
  portWrite: 9000
nodeRestrictions:  # will be applied to every pod in the instance
  enabled: false
  key: kubernetes.azure.com/scalesetpriority
  value: spot
tls:
  enabled: true
  # When Certificate Generation option is set to false you need to manually prepare secrets which are referred by
  # this helm chart. This includes creation of tls certificates for ingress but also for mutual tls between minions and
  # minion-gateway service
  certificateGeneration: false

ingress:
  enabled: false
  defaultEndpointsEnabled: true  # creates the nginx endpoints
  httpPort: 80
  httpsPort: 443
  controllerimage: registry.k8s.io/ingress-nginx/controller:v1.7.0@sha256:7612338342a1e7b8090bef78f2a04fffcadd548ccaabe8a47bf7758ff549a5f7
  secretJobimage: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
  webhookPatchJobimage: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660

# These values configure custom error pages for ingress with the specified image and debug mode settings.
customErrors:
  image: quay.io/kubernetes-ingress-controller/custom-error-pages:0.4
  debug: true

# To enable or disable Cortex dependency and enable minio storage for Ruler configuration
Cortex:
  enabled: true
  minio:
    serviceName: minio
    enabled: true
    username: minio
    password: minio123
# To enable or disable Kafka dependency
Kafka:
  enabled: true

# These values enable seamless integration of notification module with Prometheus for monitoring and
# metric retrieval.
Prometheus:
  enabled: true
  path: /prometheus
  serviceName: prometheus
  port: 9090
  auth:
    username: admin
    password: notset
    externalSecret: ""

# To enable or disable Letsencrypt Certificate. When letsencrypt is enable also change minionGateway tlsSecretName to "root-ca-certificate"
letsencrypt:
  enabled: false