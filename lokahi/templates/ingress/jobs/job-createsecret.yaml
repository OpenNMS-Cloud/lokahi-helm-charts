{{- if .Values.ingress.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook-{{ .Release.Namespace }}
    app.kubernetes.io/name: ingress-nginx-{{ .Release.Namespace }}
    app.kubernetes.io/instance: ingress-nginx-{{ .Release.Namespace }}
    app.kubernetes.io/part-of: ingress-nginx-{{ .Release.Namespace }}
    app.kubernetes.io/version: 1.3.0
  name: ingress-nginx-admission-create
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      name: ingress-nginx-admission-create
      labels:
        app.kubernetes.io/component: admission-webhook-{{ .Release.Namespace }}
        app.kubernetes.io/name: ingress-nginx-{{ .Release.Namespace }}
        app.kubernetes.io/instance: ingress-nginx-{{ .Release.Namespace }}
        app.kubernetes.io/part-of: ingress-nginx-{{ .Release.Namespace }}
        app.kubernetes.io/version: 1.3.0
    spec:
      {{- if .Values.nodeRestrictions.enabled }}
      nodeSelector:
        {{ .Values.nodeRestrictions.key }}: {{ .Values.nodeRestrictions.value }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.nodeRestrictions.key }}"
          operator: "Equal"
          value: {{ .Values.nodeRestrictions.value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: "{{ .Values.nodeRestrictions.key }}"
                    operator: In
                    values:
                      - {{ .Values.nodeRestrictions.value }}
      {{- end }}
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.ingress.secretJobimage }}
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission
{{- end }}
