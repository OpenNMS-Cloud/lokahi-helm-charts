apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.dataChoices.serviceName }}
  labels:
    app: {{ .Values.OpenNMS.dataChoices.serviceName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.OpenNMS.dataChoices.serviceName }}
  replicas: {{ .Values.OpenNMS.dataChoices.replicas }}
  template:
    metadata:
      labels:
        appdomain: opennms
        app: {{ .Values.OpenNMS.dataChoices.serviceName }}
      annotations:
        # roll the deployment when the Spring boot environment variable configmap changes
        checksum/spring-boot-env-configmap: {{ include (print $.Template.BasePath "/opennms/spring-boot-env-configmap.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: "{{ .Values.OpenNMS.dataChoices.serviceName }}"
    spec:
      {{- if .Values.nodeRestrictions.enabled }}
      nodeSelector:                                                                                    
        {{ .Values.nodeRestrictions.key }}: {{ .Values.nodeRestrictions.value }}                       
      tolerations:
        - effect: "NoSchedule"                                                                         
          key: "{{ .Values.nodeRestrictions.key }}"                                                    
          operator: "Equal"
          value: {{ .Values.nodeRestrictions.value }} 
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:                                             
          - weight: 1                                                                                  
            preference:                                                                                
              matchExpressions:                                                                        
              - key: "{{ .Values.nodeRestrictions.key }}"                                              
                operator: In
                values:                                                                                
                - {{ .Values.nodeRestrictions.value }}                                                 
      {{- end }}
      volumes:
        - name: spring-boot-app-config-volume
          configMap:
            name: spring-boot-app-config
      {{- if .Values.citus.enabled }}
      initContainers:
        - name: wait-for-db
          image: postgres:16-alpine
          args:
          - /bin/sh
          - -c
          - | 
            set -x;
            while ! psql -U {{ .Values.citus.adminUser }} -h postgres -c 'select 1'; do
              echo "Waiting for DB to be available"
              sleep 10
            done
            echo "Database is available"
      {{- end }}
      containers:
        - name: {{ .Values.OpenNMS.dataChoices.serviceName }}
          image: {{ include "lokahi.image" (dict "Values" .Values "thisService" .Values.OpenNMS.dataChoices) | quote }}
          imagePullPolicy: {{ .Values.OpenNMS.dataChoices.imagePullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=50 -javaagent:agent/opentelemetry-javaagent.jar -agentlib:jdwp=transport=dt_socket,server=y,address=5005,suspend=n,quiet=y"  # FIXME: Permanent debug port, enable only for dev mode
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.OpenNMS.dataChoices.databaseHost }}:5432/{{ .Values.OpenNMS.dataChoices.databaseName }}?currentSchema={{ .Values.OpenNMS.dataChoices.databaseSchemaName }}"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: dataChoicesUsr
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: dataChoicesPwd
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Values.OpenNMS.global.kafkaClient.bootstrapServers }}"
            - name: KEYCLOAK_BASE_URL
              value: "http://{{ .Values.keycloak.serviceName }}:8080/auth/"
            - name: KEYCLOAK_REALM
              value: "{{ .Values.keycloak.realmName }}"
            # Do not put any env variables below this. The lokahi.development.env include should be last
            # in the 'env' section so variables can be overridden with Helm chart values when needed.
            {{- include "lokahi.deployment.env" (dict "Values" .Values "thisService" .Values.OpenNMS.dataChoices) | nindent 12 }}
          envFrom:
          - configMapRef:
              name: spring-boot-env
          ports:
            - name: http
              containerPort: 8080
            - name: grpc
              containerPort: 6565
          volumeMounts:
            - name: spring-boot-app-config-volume
              mountPath: "/app/config"
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 150
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 250
          resources:
            limits:
              cpu: "{{ .Values.OpenNMS.dataChoices.resources.limits.cpu }}"
              memory: "{{ .Values.OpenNMS.dataChoices.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.OpenNMS.dataChoices.resources.requests.cpu }}"
              memory: "{{ .Values.OpenNMS.dataChoices.resources.requests.memory }}"
      {{- if .Values.OpenNMS.dataChoices.privateRepoEnabled }}
      imagePullSecrets:
        - name: image-credentials
      {{- end }}
